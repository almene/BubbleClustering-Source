library(BubbleClustering)
mat
mat
iris3
is.numeric(iris3)
is.matrix(iris3)
testing<-as.matrix(iris3)
hope<-bubbleClustering(testing)
plot(testing)
testing
plot(hope)
testing<-as.matrix(iris3, ncol=4)
library(BubbleClustering)
hope<-bubbleClustering(testing)
max(dist(iris3))
7.8^2
library(BubbleClusteringTesting)
library(BubbleClusteringTesting)
mat=matrix(runif(100,-5,5),ncol=2)
mat
test<-bubbleClustering(mat)
plot(test)
library(BubbleClusteringTesting)
mat
mat<-matrix(runif(50,-5,5), ncol=2)
test<-bubbleClustering(mat)
library(BubbleClusteringTesting)
library(BubbleClusteringTesting)
test<-bubbleClustering(mat)
library(BubbleClusteringTesting)
test<-bubbleClustering(mat)
plot(test)
library(rattle.data)
wineMat<-as.matrix(wine[,2:14])
wineBubble<-bubbleClustering(wineMat)
plot(wineBubble)
library(dendextend)
dend<-as.dendrogram(wineBubble)
labels_colors(dend)<-c(wine[,1])
plot(dend)
colors_to_use<-c(wine[,1])
colors_to_use<- colors_to_use[order.dendrogram(dend)]
labels_colors(dend)<-colors_to_use
plot(dend)
wineBubble<-bubbleClustering(wineMat, level = 3, Brad = .8, RadiiDist = 2)
dend<-as.dendrogram(wineBubble)
labels_colors(dend)<-colors_to_use
plot(dend)
wineBubble<-bubbleClustering(wineMat, level = 3, Brad = .6, RadiiDist = 2)
dend<-as.dendrogram(wineBubble)
labels_colors(dend)<-colors_to_use
plot(dend)
mat=matrix(c(0,2,3,1,2,0,4,1,3,4,0,1,1,1,0))
mat
mat=matrix(c(0,2,3,1,2,0,4,1,3,4,0,1,1,1,0), ncol=4)
mat=matrix(c(0,2,3,1,2,0,4,1,3,4,0,1,1,1,1,0), ncol=4)
mat
mat*mat
library(BubbleClusteringTesting)
mat
test<-bubbleClustering(mat, isDist = T)
plot(test)
test<-bubbleClustering(mat, isDist = F)
plot(test)
Ham1<-read.csv("Datasets/Ham1.csv", header = F)
Ham1
Ham1<-read.csv("Datasets/Ham1.csv", header = F)
Ham1
as.dist(Ham1)
?hclust
weighted1<-read.csv("Datasets/Weighted1.csv", header=F)
hamming = Ham1
weighted = weighted1
hammingStabScores= matrix(0, nrow=10,ncol=6)
colnames(hammingStabScores)<-c("B3","B4", "B5", "Hc", "Ha", "Hw2")
for (i in 1:10){
hammingStabScores[i,1]<-BubStab(hamming, level = 3, is_distance = T)
hammingStabScores[i,2]<-BubStab(hamming, level = 4, is_distance = T)
hammingStabScores[i,3]<-BubStab(hamming, level = 5, is_distance = T)
hammingStabScores[i,4]<-HClustStab(as.dist(hamming), method = "complete")
hammingStabScores[i,5]<-HClustStab(as.dist(hamming), method = "average")
hammingStabScores[i,6]<-HClustStab(as.dist(hamming), method = "ward.D2")
}
weightedStabScores= matrix(0, nrow=10,ncol=6)
colnames(weightedStabScores)<-c("B3","B4", "B5", "Hc", "Ha", "Hw2")
for (i in 1:10){
weightedStabScores[i,1]<-BubStab(weighted, level = 3, is_distance = T)
weightedStabScores[i,2]<-BubStab(weighted, level = 4, is_distance = T)
weightedStabScores[i,3]<-BubStab(weighted, level = 5, is_distance = T)
weightedStabScores[i,4]<-HClustStab(as.dist(weighted), method = "complete")
weightedStabScores[i,5]<-HClustStab(as.dist(weighted), method = "average")
weightedStabScores[i,6]<-HClustStab(as.dist(weighted), method = "ward.D2")
}
hamming = as.matrix(Ham1)
weighted = as.matrix(weighted1)
hammingStabScores= matrix(0, nrow=10,ncol=6)
colnames(hammingStabScores)<-c("B3","B4", "B5", "Hc", "Ha", "Hw2")
for (i in 1:10){
hammingStabScores[i,1]<-BubStab(hamming, level = 3, is_distance = T)
hammingStabScores[i,2]<-BubStab(hamming, level = 4, is_distance = T)
hammingStabScores[i,3]<-BubStab(hamming, level = 5, is_distance = T)
hammingStabScores[i,4]<-HClustStab(as.dist(hamming), method = "complete")
hammingStabScores[i,5]<-HClustStab(as.dist(hamming), method = "average")
hammingStabScores[i,6]<-HClustStab(as.dist(hamming), method = "ward.D2")
}
weightedStabScores= matrix(0, nrow=10,ncol=6)
colnames(weightedStabScores)<-c("B3","B4", "B5", "Hc", "Ha", "Hw2")
for (i in 1:10){
weightedStabScores[i,1]<-BubStab(weighted, level = 3, is_distance = T)
weightedStabScores[i,2]<-BubStab(weighted, level = 4, is_distance = T)
weightedStabScores[i,3]<-BubStab(weighted, level = 5, is_distance = T)
weightedStabScores[i,4]<-HClustStab(as.dist(weighted), method = "complete")
weightedStabScores[i,5]<-HClustStab(as.dist(weighted), method = "average")
weightedStabScores[i,6]<-HClustStab(as.dist(weighted), method = "ward.D2")
}
View(hammingStabScores)
View(weightedStabScores)
View(hammingStabScores)
View(test)
View(weighted)
View(weighted1)
View(weighted)
View(weightedStabScores)
warnings()
hammingStabScores[i,1]<-BubStab(data = hamming, level = 3, is_distance = T)
library(BubbleClusteringTesting)
library(BubbleClusteringTesting)
hammingStabScores[1,1]<-BubStab(data = hamming, level = 3, is_distance = T)
library(BubbleClusteringTesting)
library(BubbleClusteringTesting)
hammingStabScores[1,1]<-BubStab(data = hamming, level = 3, is_distance = T)
library(BubbleClusteringTesting)
hammingStabScores[1,1]<-BubStab(data = hamming, level = 3, is_distance = T)
library(BubbleClusteringTesting)
hammingStabScores[1,1]<-BubStab(data = hamming, level = 3, is_distance = T)
library(BubbleClusteringTesting)
hammingStabScores[1,1]<-BubStab(data = hamming, level = 3, is_distance = T)
library(BubbleClusteringTesting)
hammingStabScores[1,1]<-BubStab(data = hamming, level = 3, is_distance = T)
library(BubbleClusteringTesting)
View(hammingStabScores)
hammingStabScores= matrix(0, nrow=10,ncol=6)
colnames(hammingStabScores)<-c("B3","B4", "B5", "Hc", "Ha", "Hw2")
for (i in 1:10){
hammingStabScores[i,1]<-BubStab(data = hamming, level = 3, is_distance = T)
hammingStabScores[i,2]<-BubStab(data = hamming, level = 4, is_distance = T)
hammingStabScores[i,3]<-BubStab(data = hamming, level = 5, is_distance = T)
#hammingStabScores[i,4]<-HClustStab(as.dist(hamming), method = "complete")
#hammingStabScores[i,5]<-HClustStab(as.dist(hamming), method = "average")
#hammingStabScores[i,6]<-HClustStab(as.dist(hamming), method = "ward.D2")
}
weightedStabScores= matrix(0, nrow=10,ncol=6)
colnames(weightedStabScores)<-c("B3","B4", "B5", "Hc", "Ha", "Hw2")
for (i in 1:10){
weightedStabScores[i,1]<-BubStab(weighted, level = 3, is_distance = T)
weightedStabScores[i,2]<-BubStab(weighted, level = 4, is_distance = T)
weightedStabScores[i,3]<-BubStab(weighted, level = 5, is_distance = T)
#weightedStabScores[i,4]<-HClustStab(as.dist(weighted), method = "complete")
#weightedStabScores[i,5]<-HClustStab(as.dist(weighted), method = "average")
#weightedStabScores[i,6]<-HClustStab(as.dist(weighted), method = "ward.D2")
}
boxplot(hammingStabScores[,1:3])
boxplot(weightedStabScores[,1:3])
boxplot(cbind(weightedStabScores[,1:3],hammingStabScores[,1:3])
)
boxplot(cbind(weightedStabScores[,1:3],hammingStabScores[,1:3]), col(1,1,1,2,2,2))
boxplot(cbind(weightedStabScores[,1:3],hammingStabScores[,1:3]), col(c(1,1,1,2,2,2))
)
boxplot(cbind(weightedStabScores[,1:3],hammingStabScores[,1:3]), col=(c(1,1,1,2,2,2))
)
boxplot(cbind(weightedStabScores[,1:3],hammingStabScores[,1:3]), col=c(3,3,3,2,2,2))
hclust(as.dist(Ham1))
plot(hclust(as.dist(Ham1)))
library(BubbleClusteringTesting)
for (i in 1:10){
#hammingStabScores[i,1]<-BubStab(data = hamming, level = 3, is_distance = T)
#hammingStabScores[i,2]<-BubStab(data = hamming, level = 4, is_distance = T)
#hammingStabScores[i,3]<-BubStab(data = hamming, level = 5, is_distance = T)
hammingStabScores[i,4]<-HClustStab(hamming, method = "complete", is_dist = T)
hammingStabScores[i,5]<-HClustStab(hamming, method = "average", is_dist = T)
hammingStabScores[i,6]<-HClustStab(hamming, method = "ward.D2", is_dist = T)
}
boxplot(hammingStabScores)
for (i in 1:10){
#weightedStabScores[i,1]<-BubStab(weighted, level = 3, is_distance = T)
#weightedStabScores[i,2]<-BubStab(weighted, level = 4, is_distance = T)
#weightedStabScores[i,3]<-BubStab(weighted, level = 5, is_distance = T)
weightedStabScores[i,4]<-HClustStab(weighted, method = "complete", is_dist = T)
weightedStabScores[i,5]<-HClustStab(weighted, method = "average", is_dist = T)
weightedStabScores[i,6]<-HClustStab(weighted, method = "ward.D2", is_dist = T)
}
boxplot(weightedStabScores)
boxplot(weightedStabScores, col = 3)
boxplot(hammingStabScores, col =2)
boxplot(hammingStabScores, col =2, main="hamming")
boxplot(weightedStabScores, col = 3, main = ("weighted"))
write.csv(hammingStabScores, "hammingStabSet1.csv", row.names = F)
write.csv(weightedStabScores, "weightedStabSet1.csv", row.names = F)
Ham2<-read.csv("Datasets/Ham2.csv", header=F)
Ham2<-as.matrix(Ham2)
weighted2<-read.csv("Datasets/Weighted2.csv", header=F)
weighted2<-as.matrix(weighted)
hamming = as.matrix(Ham2)
weighted = as.matrix(weighted2)
hammingStabScores= matrix(0, nrow=10,ncol=6)
colnames(hammingStabScores)<-c("B3","B4", "B5", "Hc", "Ha", "Hw2")
for (i in 1:10){
hammingStabScores[i,1]<-BubStab(data = hamming, level = 3, is_distance = T)
hammingStabScores[i,2]<-BubStab(data = hamming, level = 4, is_distance = T)
hammingStabScores[i,3]<-BubStab(data = hamming, level = 5, is_distance = T)
hammingStabScores[i,4]<-HClustStab(hamming, method = "complete", is_dist = T)
hammingStabScores[i,5]<-HClustStab(hamming, method = "average", is_dist = T)
hammingStabScores[i,6]<-HClustStab(hamming, method = "ward.D2", is_dist = T)
write.csv(hammingStabScores, "hammingStabSet2.csv", row.names = F)
}
weightedStabScores= matrix(0, nrow=10,ncol=6)
colnames(weightedStabScores)<-c("B3","B4", "B5", "Hc", "Ha", "Hw2")
for (i in 1:10){
weightedStabScores[i,1]<-BubStab(weighted, level = 3, is_distance = T)
weightedStabScores[i,2]<-BubStab(weighted, level = 4, is_distance = T)
weightedStabScores[i,3]<-BubStab(weighted, level = 5, is_distance = T)
weightedStabScores[i,4]<-HClustStab(weighted, method = "complete", is_dist = T)
weightedStabScores[i,5]<-HClustStab(weighted, method = "average", is_dist = T)
weightedStabScores[i,6]<-HClustStab(weighted, method = "ward.D2", is_dist = T)
write.csv(weightedStabScores, "weightedStabSet2.csv", row.names = F)
}
boxplot(weightedStabScores, col = 3, main = ("weighted set2"))
boxplot(hammingStabScores, col =2, main="hamming set2")
boxplot(cbind(weightedStabScores[,1:3],hammingStabScores[,1:3]), col=c(3,3,3,2,2,2))
boxplot(cbind(weightedStabScores[,1:3],hammingStabScores[,1:3]), col=c(3,3,3,2,2,2), main="Weighted=Green, Hamming=red set 2")
weighted3<-as.matrix(read.csv("Datasets/Weighted3.csv", header=F))
Ham3<-as.matrix(read.csv("Datasets/Ham3.csv", header=F))
hamming = as.matrix(Ham3)
weighted = as.matrix(weighted3)
hammingStabScores= matrix(0, nrow=10,ncol=6)
colnames(hammingStabScores)<-c("B3","B4", "B5", "Hc", "Ha", "Hw2")
for (i in 1:10){
hammingStabScores[i,1]<-BubStab(data = hamming, level = 3, is_distance = T)
hammingStabScores[i,2]<-BubStab(data = hamming, level = 4, is_distance = T)
hammingStabScores[i,3]<-BubStab(data = hamming, level = 5, is_distance = T)
hammingStabScores[i,4]<-HClustStab(hamming, method = "complete", is_dist = T)
hammingStabScores[i,5]<-HClustStab(hamming, method = "average", is_dist = T)
hammingStabScores[i,6]<-HClustStab(hamming, method = "ward.D2", is_dist = T)
write.csv(hammingStabScores, "hammingStabSet3.csv", row.names = F)
}
weightedStabScores= matrix(0, nrow=10,ncol=6)
colnames(weightedStabScores)<-c("B3","B4", "B5", "Hc", "Ha", "Hw2")
for (i in 1:10){
weightedStabScores[i,1]<-BubStab(weighted, level = 3, is_distance = T)
weightedStabScores[i,2]<-BubStab(weighted, level = 4, is_distance = T)
weightedStabScores[i,3]<-BubStab(weighted, level = 5, is_distance = T)
weightedStabScores[i,4]<-HClustStab(weighted, method = "complete", is_dist = T)
weightedStabScores[i,5]<-HClustStab(weighted, method = "average", is_dist = T)
weightedStabScores[i,6]<-HClustStab(weighted, method = "ward.D2", is_dist = T)
write.csv(weightedStabScores, "weightedStabSet3.csv", row.names = F)
}
weighted4<-as.matrix(read.csv("Datasets/Weighted4.csv", header=F))
Ham4<-as.matrix(read.csv("Datasets/Ham4.csv", header=F))
hamming = as.matrix(Ham4)
weighted = as.matrix(weighted4)
hammingStabScores= matrix(0, nrow=10,ncol=6)
colnames(hammingStabScores)<-c("B3","B4", "B5", "Hc", "Ha", "Hw2")
for (i in 1:10){
hammingStabScores[i,1]<-BubStab(data = hamming, level = 3, is_distance = T)
hammingStabScores[i,2]<-BubStab(data = hamming, level = 4, is_distance = T)
hammingStabScores[i,3]<-BubStab(data = hamming, level = 5, is_distance = T)
hammingStabScores[i,4]<-HClustStab(hamming, method = "complete", is_dist = T)
hammingStabScores[i,5]<-HClustStab(hamming, method = "average", is_dist = T)
hammingStabScores[i,6]<-HClustStab(hamming, method = "ward.D2", is_dist = T)
write.csv(hammingStabScores, "hammingStabSet4.csv", row.names = F)
}
weightedStabScores= matrix(0, nrow=10,ncol=6)
colnames(weightedStabScores)<-c("B3","B4", "B5", "Hc", "Ha", "Hw2")
for (i in 1:10){
weightedStabScores[i,1]<-BubStab(weighted, level = 3, is_distance = T)
weightedStabScores[i,2]<-BubStab(weighted, level = 4, is_distance = T)
weightedStabScores[i,3]<-BubStab(weighted, level = 5, is_distance = T)
weightedStabScores[i,4]<-HClustStab(weighted, method = "complete", is_dist = T)
weightedStabScores[i,5]<-HClustStab(weighted, method = "average", is_dist = T)
weightedStabScores[i,6]<-HClustStab(weighted, method = "ward.D2", is_dist = T)
write.csv(weightedStabScores, "weightedStabSet4.csv", row.names = F)
}
weighted5<-as.matrix(read.csv("Datasets/Weighted5.csv", header=F))
Ham5<-as.matrix(read.csv("Datasets/Ham5.csv", header=F))
hamming = as.matrix(Ham5)
weighted = as.matrix(weighted5)
hammingStabScores= matrix(0, nrow=10,ncol=6)
colnames(hammingStabScores)<-c("B3","B4", "B5", "Hc", "Ha", "Hw2")
for (i in 1:10){
hammingStabScores[i,1]<-BubStab(data = hamming, level = 3, is_distance = T)
hammingStabScores[i,2]<-BubStab(data = hamming, level = 4, is_distance = T)
hammingStabScores[i,3]<-BubStab(data = hamming, level = 5, is_distance = T)
hammingStabScores[i,4]<-HClustStab(hamming, method = "complete", is_dist = T)
hammingStabScores[i,5]<-HClustStab(hamming, method = "average", is_dist = T)
hammingStabScores[i,6]<-HClustStab(hamming, method = "ward.D2", is_dist = T)
write.csv(hammingStabScores, "hammingStabSet5.csv", row.names = F)
}
weightedStabScores= matrix(0, nrow=10,ncol=6)
colnames(weightedStabScores)<-c("B3","B4", "B5", "Hc", "Ha", "Hw2")
for (i in 1:10){
weightedStabScores[i,1]<-BubStab(weighted, level = 3, is_distance = T)
weightedStabScores[i,2]<-BubStab(weighted, level = 4, is_distance = T)
weightedStabScores[i,3]<-BubStab(weighted, level = 5, is_distance = T)
weightedStabScores[i,4]<-HClustStab(weighted, method = "complete", is_dist = T)
weightedStabScores[i,5]<-HClustStab(weighted, method = "average", is_dist = T)
weightedStabScores[i,6]<-HClustStab(weighted, method = "ward.D2", is_dist = T)
write.csv(weightedStabScores, "weightedStabSet5.csv", row.names = F)
}
library(BubbleClusteringTesting)
weighted3<-as.matrix(read.csv("Datasets/Weighted3.csv", header=F))
Ham3<-as.matrix(read.csv("Datasets/Ham3.csv", header=F))
hamming = as.matrix(Ham3)
weighted = as.matrix(weighted3)
hammingStabScores= matrix(0, nrow=10,ncol=6)
colnames(hammingStabScores)<-c("B3","B4", "B5", "Hc", "Ha", "Hw2")
for (i in 1:10){
hammingStabScores[i,1]<-BubStab(data = hamming, level = 3, is_distance = T)
hammingStabScores[i,2]<-BubStab(data = hamming, level = 4, is_distance = T)
hammingStabScores[i,3]<-BubStab(data = hamming, level = 5, is_distance = T)
hammingStabScores[i,4]<-HClustStab(hamming, method = "complete", is_dist = T)
hammingStabScores[i,5]<-HClustStab(hamming, method = "average", is_dist = T)
hammingStabScores[i,6]<-HClustStab(hamming, method = "ward.D2", is_dist = T)
write.csv(hammingStabScores, "hammingStabSet3.csv", row.names = F)
}
weightedStabScores= matrix(0, nrow=10,ncol=6)
colnames(weightedStabScores)<-c("B3","B4", "B5", "Hc", "Ha", "Hw2")
for (i in 1:10){
weightedStabScores[i,1]<-BubStab(weighted, level = 3, is_distance = T)
weightedStabScores[i,2]<-BubStab(weighted, level = 4, is_distance = T)
weightedStabScores[i,3]<-BubStab(weighted, level = 5, is_distance = T)
weightedStabScores[i,4]<-HClustStab(weighted, method = "complete", is_dist = T)
weightedStabScores[i,5]<-HClustStab(weighted, method = "average", is_dist = T)
weightedStabScores[i,6]<-HClustStab(weighted, method = "ward.D2", is_dist = T)
write.csv(weightedStabScores, "weightedStabSet3.csv", row.names = F)
}
weighted4<-as.matrix(read.csv("Datasets/Weighted4.csv", header=F))
Ham4<-as.matrix(read.csv("Datasets/Ham4.csv", header=F))
hamming = as.matrix(Ham4)
weighted = as.matrix(weighted4)
hammingStabScores= matrix(0, nrow=10,ncol=6)
colnames(hammingStabScores)<-c("B3","B4", "B5", "Hc", "Ha", "Hw2")
for (i in 1:10){
hammingStabScores[i,1]<-BubStab(data = hamming, level = 3, is_distance = T)
hammingStabScores[i,2]<-BubStab(data = hamming, level = 4, is_distance = T)
hammingStabScores[i,3]<-BubStab(data = hamming, level = 5, is_distance = T)
hammingStabScores[i,4]<-HClustStab(hamming, method = "complete", is_dist = T)
hammingStabScores[i,5]<-HClustStab(hamming, method = "average", is_dist = T)
hammingStabScores[i,6]<-HClustStab(hamming, method = "ward.D2", is_dist = T)
write.csv(hammingStabScores, "hammingStabSet4.csv", row.names = F)
}
weightedStabScores= matrix(0, nrow=10,ncol=6)
colnames(weightedStabScores)<-c("B3","B4", "B5", "Hc", "Ha", "Hw2")
for (i in 1:10){
weightedStabScores[i,1]<-BubStab(weighted, level = 3, is_distance = T)
weightedStabScores[i,2]<-BubStab(weighted, level = 4, is_distance = T)
weightedStabScores[i,3]<-BubStab(weighted, level = 5, is_distance = T)
weightedStabScores[i,4]<-HClustStab(weighted, method = "complete", is_dist = T)
weightedStabScores[i,5]<-HClustStab(weighted, method = "average", is_dist = T)
weightedStabScores[i,6]<-HClustStab(weighted, method = "ward.D2", is_dist = T)
write.csv(weightedStabScores, "weightedStabSet4.csv", row.names = F)
}
weighted5<-as.matrix(read.csv("Datasets/Weighted5.csv", header=F))
Ham5<-as.matrix(read.csv("Datasets/Ham5.csv", header=F))
hamming = as.matrix(Ham5)
weighted = as.matrix(weighted5)
hammingStabScores= matrix(0, nrow=10,ncol=6)
colnames(hammingStabScores)<-c("B3","B4", "B5", "Hc", "Ha", "Hw2")
for (i in 1:10){
hammingStabScores[i,1]<-BubStab(data = hamming, level = 3, is_distance = T)
hammingStabScores[i,2]<-BubStab(data = hamming, level = 4, is_distance = T)
hammingStabScores[i,3]<-BubStab(data = hamming, level = 5, is_distance = T)
hammingStabScores[i,4]<-HClustStab(hamming, method = "complete", is_dist = T)
hammingStabScores[i,5]<-HClustStab(hamming, method = "average", is_dist = T)
hammingStabScores[i,6]<-HClustStab(hamming, method = "ward.D2", is_dist = T)
write.csv(hammingStabScores, "hammingStabSet5.csv", row.names = F)
}
weightedStabScores= matrix(0, nrow=10,ncol=6)
colnames(weightedStabScores)<-c("B3","B4", "B5", "Hc", "Ha", "Hw2")
for (i in 1:10){
weightedStabScores[i,1]<-BubStab(weighted, level = 3, is_distance = T)
weightedStabScores[i,2]<-BubStab(weighted, level = 4, is_distance = T)
weightedStabScores[i,3]<-BubStab(weighted, level = 5, is_distance = T)
weightedStabScores[i,4]<-HClustStab(weighted, method = "complete", is_dist = T)
weightedStabScores[i,5]<-HClustStab(weighted, method = "average", is_dist = T)
weightedStabScores[i,6]<-HClustStab(weighted, method = "ward.D2", is_dist = T)
write.csv(weightedStabScores, "weightedStabSet5.csv", row.names = F)
}
boxplot(cbind(weightedStabScores[,1:3],hammingStabScores[,1:3]), col=c(3,3,3,2,2,2), main="Weighted=Green, Hamming=red set 2")
boxplot(cbind(weightedStabScores[,1:3],hammingStabScores[,1:3]), col=c(3,3,3,2,2,2), main="Weighted=Green, Hamming=red set 5")
boxplot(hammingStabScores, col =2, main="hamming set5")
boxplot(weightedStabScores, col = 3, main = ("weighted set5"))
set3H<-read.csv("hammingStabSet3.csv")
set3H
temptH<-hammingStabScores
temptW<-weightedStabScores
hammingStabScores= matrix(0, nrow=50,ncol=6)
colnames(hammingStabScores)<-c("B3","B4", "B5", "Hc", "Ha", "Hw2")
weightedStabScores= matrix(0, nrow=50,ncol=6)
colnames(weightedStabScores)<-c("B3","B4", "B5", "Hc", "Ha", "Hw2")
hammingStabScores[1:10,]<-temptH
weightedStabScores[1:10,]<-temptW
hammingStabScores
for (i in 11:50){
hammingStabScores[i,1]<-BubStab(data = hamming, level = 3, is_distance = T)
hammingStabScores[i,2]<-BubStab(data = hamming, level = 4, is_distance = T)
hammingStabScores[i,3]<-BubStab(data = hamming, level = 5, is_distance = T)
#hammingStabScores[i,4]<-HClustStab(hamming, method = "complete", is_dist = T)
#hammingStabScores[i,5]<-HClustStab(hamming, method = "average", is_dist = T)
#hammingStabScores[i,6]<-HClustStab(hamming, method = "ward.D2", is_dist = T)
write.csv(hammingStabScores, "hammingStabSet5.csv", row.names = F)
}
for (i in 11:50){
weightedStabScores[i,1]<-BubStab(weighted, level = 3, is_distance = T)
weightedStabScores[i,2]<-BubStab(weighted, level = 4, is_distance = T)
weightedStabScores[i,3]<-BubStab(weighted, level = 5, is_distance = T)
#weightedStabScores[i,4]<-HClustStab(weighted, method = "complete", is_dist = T)
#weightedStabScores[i,5]<-HClustStab(weighted, method = "average", is_dist = T)
#weightedStabScores[i,6]<-HClustStab(weighted, method = "ward.D2", is_dist = T)
write.csv(weightedStabScores, "weightedStabSet5.csv", row.names = F)
}
boxplot(weightedStabScores, col = 3, main = ("weighted set5"))
for (i in 11:50){
weightedStabScores[i,4]<-weightedStabScores[1,4]
weightedStabScores[i,5]<-weightedStabScores[1,5]
weightedStabScores[i,6]<-weightedStabScores[1,6]
hammingStabScores[i,4]<-hammingStabScores[1,4]
hammingStabScores[i,5]<-hammingStabScores[1,5]
hammingStabScores[i,6]<-hammingStabScores[1,6]
}
boxplot(weightedStabScores, col = 3, main = ("weighted set5"))
boxplot(cbind(weightedStabScores[,1:3],hammingStabScores[,1:3]), col=c(3,3,3,2,2,2), main="Weighted=Green, Hamming=red set 5")
boxplot(hammingStabScores, col =2, main="hamming set5")
boxplot(weightedStabScores, col = 3, main = ("weighted set5"))
boxplot(cbind(weightedStabScores[,1:3],hammingStabScores[,1:3]), col=c(3,3,3,2,2,2), main="Weighted=Green, Hamming=red set 5")
boxplot(hammingStabScores, col =2, main="hamming set5")
boxplot(weightedStabScores, col = 3, main = ("weighted set5"))
